Heap: MinHeap Sink Down
Implement the sinkDown(int index) method.

The MinHeap class represents a max heap, a complete binary tree in which the value in each internal node is less than or equal to the values in the children of that node.

The MinHeap class currently provides several helper methods:

getHeap() returns a new list containing all elements of the heap,

leftChild(int index) returns the index of the left child of a node at a given index,

rightChild(int index) returns the index of the right child of a node at a given index,

parent(int index) returns the index of the parent of a node at a given index,

swap(int index1, int index2) swaps the elements at two given indices in the heap.



The sinkDown(int index) method should take an integer index as a parameter and restore the min heap property when it is violated by the node at the input index. This can happen when a node's value becomes less than one or both of its children's values, often after a removal operation in a heap.

The sinkDown(int index) method should perform as follows:

Calculate the indices of the left and right children of the node at the input index using the leftChild(int index) and rightChild(int index) methods.

Identify the minimum value among the node and its children.

If the minimum value is not at the input index, swap the node at the input index with the node containing the minimum value.

Continue this process for the swapped child node until the node is either a leaf node or its value is less than both its children.



Your implementation should ensure that after calling the sinkDown(int index) method, the min heap property holds, i.e., the value of each node is less than or equal to the values of its children. Remember to use the provided helper methods to assist in your implementation.